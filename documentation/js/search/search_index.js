var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.283,1,2.053]],["body/controllers/AppController.html",[0,1.922,1,3.076,2,1.481,3,0.354,4,0.307,5,0.307,6,3.068,7,0.566,8,1.627,9,4.682,10,4.682,11,1.922,12,0.032,13,1.07,14,3.676,15,1.627,16,2.078,17,4.772,18,3.676,19,0.591,20,0.754,21,2.785,22,3.068,23,0.354,24,0.018,25,2.131,26,3.068,27,1.768,28,4.772,29,0.024,30,0.024]],["title/modules/AppModule.html",[31,1.086,32,2.053]],["body/modules/AppModule.html",[1,3.01,2,1.626,3,0.277,4,0.239,5,0.239,12,0.032,19,0.731,20,0.589,21,2.91,22,2.396,23,0.277,24,0.014,29,0.02,30,0.02,31,1.593,32,3.993,33,1.26,34,1.26,35,1.509,36,1.509,37,1.26,38,2.455,39,1.509,40,2.396,41,2.396,42,2.396,43,3.21,44,2.43,45,3.21,46,3.21,47,2.122,48,1.509,49,1.509,50,2.871,51,2.602,52,2.871,53,2.396,54,2.396,55,2.871,56,2.871,57,2.871,58,2.871,59,2.396,60,2.871,61,2.871,62,2.871,63,2.871,64,2.871,65,2.871]],["title/injectables/AppService.html",[21,1.674,66,0.847]],["body/injectables/AppService.html",[3,0.378,4,0.327,5,0.327,7,0.605,8,1.698,9,4.798,10,4.798,12,0.032,13,1.116,15,1.698,16,2.129,19,0.486,20,0.806,21,2.616,23,0.378,24,0.019,27,1.844,29,0.025,30,0.025,66,1.324,67,1.882,68,3.277,69,3.926,70,3.926,71,3.926,72,3.926,73,3.926]],["title/controllers/AuthController.html",[0,1.283,74,2.053]],["body/controllers/AuthController.html",[0,0.839,2,0.839,3,0.201,4,0.174,5,0.39,7,0.321,8,1.088,11,1.749,12,0.032,13,0.974,15,1.481,16,0.772,19,0.657,20,0.427,23,0.201,24,0.01,25,1.207,27,1.609,29,0.016,30,0.016,74,2.056,75,1.739,76,1.512,77,2.083,78,2.51,79,2.813,80,2.662,81,2.662,82,2.662,83,2.083,84,3.875,85,2.083,86,2.083,87,2.083,88,2.083,89,1.749,90,1.609,91,0.96,92,1.609,93,4.121,94,2.081,95,1.739,96,2.517,97,3.189,98,2.083,99,3.017,100,2.083,101,2.083,102,2.083,103,1.739,104,2.517,105,3.189,106,2.083,107,1.512,108,1.512,109,1.739,110,3.189,111,3.189,112,2.037,113,1.739,114,1.739,115,1.739,116,1.207,117,2.083,118,2.083,119,1.739,120,1.739,121,3.189,122,2.083,123,2.083,124,3.189,125,2.083,126,1.739,127,1.207,128,2.083,129,2.083,130,2.083,131,2.081,132,2.083,133,2.083,134,2.083,135,3.189,136,2.662,137,2.083,138,2.083,139,2.083,140,2.083,141,2.083,142,1.739,143,0.839,144,2.083,145,2.083,146,2.083,147,2.083,148,2.083,149,2.083,150,2.083,151,2.083,152,2.083,153,2.083,154,2.083,155,2.083,156,2.083,157,2.083,158,2.083]],["title/classes/AuthGuard.html",[24,0.015,116,1.846]],["body/classes/AuthGuard.html",[3,0.523,4,0.281,5,0.281,7,0.52,8,1.538,12,0.032,13,1.012,15,1.538,19,0.559,20,0.693,23,0.325,24,0.016,27,1.671,29,0.022,30,0.022,66,0.898,89,1.817,90,1.671,91,0.693,92,1.671,116,2.945,159,1.359,160,2.817,161,2.908,162,4.511,163,4.511,164,4.511,165,4.511,166,5.424,167,3.375,168,3.375,169,4.511,170,4.103,171,3.375,172,5.081,173,4.511,174,3.375,175,2.175,176,3.375,177,2.175,178,1.956]],["title/modules/AuthModule.html",[31,1.086,43,1.846]],["body/modules/AuthModule.html",[2,1.723,3,0.301,4,0.26,5,0.26,12,0.032,19,0.721,20,0.64,23,0.301,24,0.015,29,0.021,30,0.021,31,1.664,33,1.369,34,1.369,35,1.64,36,1.64,37,1.369,38,2.565,39,1.64,43,3.526,44,2.494,47,2.248,48,1.64,49,1.64,51,2.757,74,3.146,112,2.987,113,2.604,170,2.264,175,2.011,179,2.604,180,3.119,181,2.604,182,3.294,183,3.119,184,3.57,185,2.264,186,3.119,187,2.264,188,3.119,189,3.119,190,3.119,191,3.119,192,2.264,193,3.119,194,3.119,195,2.604]],["title/injectables/AuthService.html",[66,0.847,112,1.674]],["body/injectables/AuthService.html",[3,0.147,4,0.128,5,0.128,7,0.236,8,0.852,12,0.033,13,0.969,15,1.474,19,0.565,20,0.314,23,0.147,24,0.007,27,1.492,29,0.012,30,0.012,66,0.665,67,0.734,78,2.319,79,3.309,80,2.643,81,2.086,82,3.051,89,1.741,90,1.761,91,0.887,92,1.601,94,1.752,95,2.086,96,2.118,99,2.938,103,2.086,104,2.118,112,1.313,114,1.278,115,1.278,131,2.279,170,2.298,177,2.596,178,2.334,184,3.805,185,1.111,196,1.278,197,2.499,198,2.499,199,1.611,200,1.111,201,1.604,202,1.53,203,1.814,204,2.499,205,1.53,206,1.278,207,1.53,208,2.499,209,2.271,210,1.53,211,4.027,212,1.53,213,2.499,214,1.53,215,3.051,216,1.111,217,1.111,218,1.53,219,1.53,220,1.278,221,0.987,222,1.278,223,2.086,224,1.53,225,1.111,226,1.53,227,1.278,228,1.278,229,1.53,230,1.53,231,3.064,232,3.654,233,3.654,234,1.921,235,3.654,236,1.53,237,1.53,238,1.53,239,1.53,240,1.53,241,1.53,242,2.499,243,1.53,244,2.653,245,1.111,246,2.643,247,1.278,248,2.499,249,1.814,250,2.086,251,2.499,252,1.53,253,1.53,254,2.499,255,1.53,256,1.53,257,1.53,258,1.53,259,1.53,260,2.086,261,1.53,262,1.111,263,1.53,264,1.53,265,3.166,266,2.118,267,1.278,268,3.362,269,0.987,270,1.278,271,1.53,272,2.499,273,1.53,274,1.53,275,1.53,276,1.53,277,1.278,278,1.53]],["title/classes/CreateSchoolDto.html",[24,0.015,279,1.674]],["body/classes/CreateSchoolDto.html",[3,0.318,4,0.275,5,0.275,7,0.508,11,2.165,12,0.031,13,1.205,16,2.224,19,0.409,23,0.318,24,0.021,29,0.022,30,0.022,91,1.103,92,2.14,143,1.789,159,1.328,234,2.64,279,2.334,280,4.682,281,2.394,282,5.022,283,5.022,284,5.022,285,4.441,286,3.298,287,3.298,288,3.298,289,3.298,290,3.298,291,3.298,292,3.224,293,2.863,294,4.485,295,3.251,296,1.733]],["title/classes/CreateTaskDTO.html",[24,0.015,297,1.846]],["body/classes/CreateTaskDTO.html",[3,0.357,4,0.309,5,0.309,7,0.571,11,1.933,12,0.031,13,1.193,16,2.084,19,0.459,23,0.357,24,0.023,29,0.024,30,0.024,91,1.092,143,1.933,159,1.493,209,2.522,293,3.43,295,3.084,296,1.949,297,2.781,298,4.697,299,2.691,300,3.862,301,3.43,302,3.43,303,3.095,304,4.798,305,3.095,306,3.095]],["title/injectables/JwtStrategy.html",[66,0.847,182,1.846]],["body/injectables/JwtStrategy.html",[3,0.323,4,0.279,5,0.279,7,0.516,8,1.53,12,0.032,13,1.006,15,1.142,19,0.67,20,0.687,23,0.323,24,0.016,27,1.241,29,0.022,30,0.022,66,1.194,67,1.605,78,2.221,89,1.349,90,1.241,91,0.687,92,1.241,94,1.605,161,2.893,175,2.158,182,2.601,192,3.674,195,2.795,199,3.262,206,2.795,221,2.158,222,2.795,228,2.795,234,1.76,266,1.941,307,2.795,308,4.487,309,4.487,310,3.349,311,4.487,312,3.349,313,3.349,314,3.349,315,3.349,316,2.795,317,3.349,318,3.349,319,3.349,320,3.349,321,3.349,322,3.349,323,3.349,324,2.795,325,3.349]],["title/classes/LoginDto.html",[24,0.015,96,1.846]],["body/classes/LoginDto.html",[3,0.359,4,0.311,5,0.311,7,0.573,11,1.938,12,0.031,13,1.079,16,2.088,19,0.596,23,0.359,24,0.023,29,0.024,30,0.024,91,0.987,96,2.789,127,2.158,143,1.938,159,1.5,234,2.802,262,3.87,292,3.493,293,3.437,295,2.789,296,1.957,326,3.108,327,3.723,328,3.723,329,3.723,330,3.723,331,4.45,332,3.108,333,3.108,334,3.108,335,3.108]],["title/modules/PrismaModule.html",[31,1.086,44,1.398]],["body/modules/PrismaModule.html",[3,0.362,4,0.313,5,0.313,12,0.031,19,0.6,20,0.771,23,0.362,24,0.018,29,0.024,30,0.024,31,1.826,33,1.648,34,1.648,35,1.974,36,1.974,37,1.648,38,2.814,39,2.814,44,2.674,47,2.543,48,1.974,49,1.974,201,2.795,336,3.135,337,3.135,338,3.135,339,3.755,340,3.755,341,3.755]],["title/injectables/PrismaService.html",[66,0.847,201,1.398]],["body/injectables/PrismaService.html",[3,0.334,4,0.289,5,0.289,7,0.534,8,1.567,12,0.032,13,1.03,15,1.567,19,0.569,20,0.712,23,0.334,24,0.017,29,0.023,30,0.023,66,1.222,67,1.663,78,2.624,89,1.398,90,1.285,91,0.712,92,1.285,131,2.202,161,2.962,201,2.016,342,2.896,343,5.152,344,4.595,345,5.862,346,4.595,347,5.484,348,3.469,349,2.896,350,3.469,351,2.236,352,3.469,353,3.469,354,3.469,355,3.469]],["title/classes/RegisterDto.html",[24,0.015,104,1.846]],["body/classes/RegisterDto.html",[3,0.336,4,0.291,5,0.291,7,0.537,11,2.079,12,0.031,13,1.158,16,2.174,19,0.571,23,0.336,24,0.022,29,0.023,30,0.023,90,1.912,91,1.059,104,2.67,127,2.019,143,1.856,159,1.403,234,2.713,262,3.747,292,3.344,293,3.541,295,3.184,296,1.831,331,4.585,332,2.908,333,2.908,334,2.908,335,2.908,356,2.908,357,3.483,358,3.483,359,3.483,360,3.483,361,3.483,362,3.483]],["title/classes/School.html",[24,0.015,363,1.846]],["body/classes/School.html",[3,0.46,4,0.398,5,0.398,12,0.029,23,0.46,24,0.023,29,0.028,30,0.028,159,1.921,363,3.25,364,3.981]],["title/controllers/SchoolController.html",[0,1.283,365,2.053]],["body/controllers/SchoolController.html",[0,0.924,2,0.924,3,0.221,4,0.191,5,0.191,7,0.353,8,1.17,11,1.966,12,0.032,13,1.095,15,1.665,16,2.068,19,0.605,20,0.471,23,0.221,24,0.011,25,1.329,26,1.914,27,1.808,29,0.017,30,0.017,76,1.664,78,2.638,89,1.837,90,1.689,91,0.936,92,1.689,94,2.34,107,2.489,108,2.982,126,1.914,127,1.329,131,2.34,225,1.664,266,2.969,279,2.692,363,1.329,365,2.211,366,1.914,367,2.489,368,3.806,369,2.863,370,2.863,371,2.489,372,2.293,373,2.293,374,2.293,375,1.914,376,3.429,377,2.293,378,1.914,379,3.429,380,2.293,381,1.914,382,3.164,383,3.429,384,2.293,385,1.914,386,1.914,387,2.159,388,1.914,389,1.478,390,2.489,391,1.478,392,2.293,393,2.293,394,2.293,395,2.293,396,2.293,397,2.293,398,2.293,399,2.293,400,2.293,401,2.293,402,2.293]],["title/modules/SchoolModule.html",[31,1.086,45,1.846]],["body/modules/SchoolModule.html",[2,1.881,3,0.343,4,0.297,5,0.297,12,0.032,19,0.686,20,0.729,23,0.343,24,0.017,29,0.023,30,0.023,31,1.778,33,1.56,34,1.56,35,1.869,36,1.869,37,1.56,38,2.74,39,1.869,44,2.59,45,3.538,47,2.454,48,1.869,49,1.869,51,3.01,187,2.58,365,3.361,387,3.102,388,2.967,403,2.967,404,3.555,405,2.967,406,3.555,407,3.555]],["title/injectables/SchoolService.html",[66,0.847,387,1.674]],["body/injectables/SchoolService.html",[3,0.177,4,0.153,5,0.153,7,0.283,8,0.988,12,0.032,13,1.052,15,1.507,19,0.547,20,0.377,23,0.177,24,0.009,25,1.066,27,1.637,29,0.014,30,0.014,66,0.77,67,0.882,78,2.529,89,1.78,90,1.637,91,0.907,92,1.637,94,2.117,99,2.308,131,2.117,177,2.618,178,2.355,199,1.186,200,1.335,201,1.782,203,2.948,209,2.75,215,1.536,216,1.335,217,1.335,231,2.848,244,3.207,245,1.335,249,1.335,250,1.536,266,2.948,270,3.391,279,1.882,351,1.186,363,1.679,367,2.102,368,3.391,369,2.417,370,2.417,371,2.6,375,2.417,378,2.417,381,2.417,382,2.846,387,1.522,389,1.186,390,2.102,391,1.186,408,1.536,409,1.84,410,1.84,411,1.84,412,2.896,413,1.84,414,1.84,415,1.84,416,1.84,417,1.536,418,1.84,419,1.84,420,1.84,421,1.84,422,1.84,423,1.84,424,1.84,425,1.84,426,1.84,427,1.84,428,1.84,429,1.84,430,1.84,431,1.84,432,1.84,433,1.536,434,3.581,435,1.84,436,1.84,437,1.84,438,1.84,439,1.84,440,1.84,441,1.84,442,2.896,443,2.896,444,1.84,445,1.84,446,1.536,447,2.417,448,1.536,449,1.536,450,1.536,451,1.536,452,1.536,453,1.536,454,0.882]],["title/interfaces/Task.html",[454,1.527,455,2.053]],["body/interfaces/Task.html",[3,0.345,4,0.299,5,0.299,7,0.552,12,0.032,16,2.192,23,0.452,29,0.023,30,0.023,91,1.074,143,1.891,209,2.751,231,2.31,269,2.31,301,3.813,302,3.813,454,2.889,455,2.31,456,3.584,457,2.602,458,4.294,459,3.8,460,3.026,461,4.37]],["title/controllers/TaskController.html",[0,1.283,462,2.053]],["body/controllers/TaskController.html",[0,0.941,2,0.941,3,0.225,4,0.195,5,0.195,7,0.36,8,1.186,11,1.982,12,0.032,13,1.103,15,1.678,19,0.61,20,0.479,23,0.225,24,0.011,25,1.354,27,1.823,29,0.017,30,0.017,76,1.696,78,2.647,89,1.854,90,1.705,91,0.714,92,1.705,94,2.358,107,3.984,108,2.524,109,1.95,116,1.354,131,2.206,136,4.107,225,1.696,297,2.668,385,1.95,386,1.95,389,1.506,391,1.506,454,1.12,462,2.242,463,1.95,464,2.903,465,2.903,466,3.841,467,2.903,468,2.903,469,2.336,470,2.336,471,2.336,472,2.336,473,2.336,474,2.336,475,5.158,476,2.336,477,2.336,478,2.336,479,2.336,480,2.336,481,2.336,482,2.668,483,2.336,484,2.336,485,2.336,486,2.903,487,2.184,488,1.95,489,2.336,490,2.336,491,2.336,492,2.336,493,2.336,494,2.336,495,2.336,496,2.336,497,2.336,498,2.336,499,2.336,500,2.336,501,2.336]],["title/modules/TaskModule.html",[31,1.086,46,1.846]],["body/modules/TaskModule.html",[2,1.881,3,0.343,4,0.297,5,0.297,12,0.032,19,0.686,20,0.729,23,0.343,24,0.017,29,0.023,30,0.023,31,1.778,33,1.56,34,1.56,35,1.869,36,1.869,37,1.56,38,2.74,39,1.869,44,2.59,46,3.538,47,2.454,48,1.869,49,1.869,51,3.01,187,2.58,462,3.361,487,3.102,488,2.967,502,2.967,503,2.967,504,3.555,505,3.555,506,3.555]],["title/injectables/TaskService.html",[66,0.847,487,1.674]],["body/injectables/TaskService.html",[3,0.157,4,0.136,5,0.136,7,0.25,8,0.895,12,0.032,13,0.996,15,1.417,19,0.55,20,0.334,23,0.157,24,0.008,27,1.539,29,0.013,30,0.013,66,0.698,67,0.779,78,2.462,79,1.18,89,1.674,90,1.646,91,0.853,92,1.539,93,2.754,94,1.991,99,3.464,131,1.991,177,2.678,178,2.408,199,1.691,200,1.18,201,1.662,203,2.395,209,2.64,216,1.18,217,1.18,223,2.19,231,2.678,234,0.854,244,2.748,245,1.18,246,1.357,247,1.357,249,2.395,260,2.754,266,2.709,267,1.357,268,3.161,277,1.357,297,2.195,300,2.395,351,1.048,371,1.904,389,1.048,391,1.048,417,1.357,433,2.19,446,2.19,447,3.161,448,2.19,449,2.19,450,2.19,451,2.19,452,2.754,453,2.19,454,2.13,458,3.646,464,2.19,465,3.161,466,3.161,467,2.19,468,2.19,482,2.195,486,2.19,487,1.379,507,1.357,508,1.625,509,2.624,510,1.625,511,2.624,512,1.625,513,1.625,514,2.624,515,1.625,516,2.624,517,1.625,518,1.625,519,1.357,520,1.625,521,2.624,522,4.155,523,2.624,524,1.625,525,2.624,526,1.625,527,1.625,528,1.625,529,1.625,530,2.624,531,1.625,532,1.625,533,1.625]],["title/classes/UpdateSchoolDto.html",[24,0.015,382,1.846]],["body/classes/UpdateSchoolDto.html",[3,0.42,4,0.364,5,0.364,12,0.031,19,0.658,23,0.42,24,0.021,29,0.026,30,0.026,159,1.757,161,3.425,279,2.292,281,3.166,367,3.166,382,3.08,390,3.166,534,3.64,535,5.314,536,4.361,537,3.64,538,3.64]],["title/classes/UpdateTaskDTO.html",[24,0.015,482,1.846]],["body/classes/UpdateTaskDTO.html",[3,0.357,4,0.309,5,0.309,7,0.571,11,1.933,12,0.031,13,1.193,16,2.084,19,0.459,23,0.357,24,0.023,29,0.024,30,0.024,91,1.092,143,1.933,159,1.493,209,2.522,294,4.441,295,3.084,296,1.949,299,2.691,300,3.862,301,3.43,302,3.43,303,3.095,305,3.095,306,3.095,482,2.781,539,4.697,540,4.798]],["title/coverage.html",[541,3.149]],["body/coverage.html",[0,1.997,1,1.763,5,0.228,6,2.283,12,0.032,21,1.437,24,0.027,29,0.019,30,0.019,37,1.2,66,1.45,68,2.283,74,1.763,75,2.283,91,0.561,96,1.585,104,1.585,112,1.437,116,1.585,160,2.283,178,1.585,182,1.585,196,2.283,201,1.2,221,1.763,269,1.763,279,1.437,280,2.283,281,2.832,297,1.585,298,2.283,299,2.832,307,2.283,326,2.283,342,2.283,356,2.283,363,1.585,364,2.283,365,1.763,366,2.283,382,1.585,387,1.437,408,2.283,454,1.311,455,1.763,457,2.832,462,1.763,463,2.283,482,1.585,487,1.437,507,2.283,534,2.283,539,2.283,541,1.985,542,2.735,543,2.735,544,2.735,545,6.37,546,5.45,547,3.901,548,4.547,549,4.958,550,2.283,551,3.901,552,5.242,553,2.283,554,2.735,555,3.901,556,2.735,557,2.735]],["title/dependencies.html",[34,1.68,558,2.224]],["body/dependencies.html",[12,0.032,20,0.781,24,0.023,29,0.024,30,0.024,34,1.67,53,3.176,54,3.176,119,3.176,120,3.176,127,2.206,175,2.453,185,2.762,192,2.762,220,3.176,296,2,316,4.073,351,2.453,519,3.176,537,3.176,538,3.176,559,5.387,560,3.805,561,3.805,562,3.805,563,3.805,564,3.805,565,3.805,566,3.805,567,3.805,568,3.805,569,3.805,570,3.805,571,3.805,572,3.805,573,3.805,574,3.805,575,3.805]],["title/miscellaneous/functions.html",[576,1.717,577,3.196]],["body/miscellaneous/functions.html",[7,0.743,12,0.028,29,0.028,30,0.028,37,2.625,553,4.026,576,3.109,577,4.026,578,4.823]],["title/index.html",[7,0.41,579,2.665,580,2.665]],["body/index.html",[4,0.271,12,0.031,29,0.022,30,0.022,59,2.711,349,2.711,460,2.094,541,2.358,581,3.248,582,3.248,583,4.396,584,3.248,585,3.248,586,3.248,587,3.248,588,3.248,589,3.248,590,4.984,591,3.248,592,3.248,593,3.248,594,3.248,595,4.984,596,5.881,597,3.248,598,3.248,599,5.752,600,3.248,601,3.248,602,4.396,603,3.248,604,3.248,605,3.248,606,3.248,607,4.396,608,4.396,609,3.248,610,3.248,611,3.248,612,4.396,613,4.396,614,3.248,615,3.248,616,3.248,617,3.248,618,3.248,619,2.711,620,3.248,621,3.248,622,3.248,623,3.248,624,3.248,625,3.248,626,3.248,627,3.248,628,3.248,629,2.711,630,3.248,631,3.248,632,3.248,633,3.248,634,3.248,635,3.248,636,2.711]],["title/modules.html",[33,1.904]],["body/modules.html",[12,0.026,29,0.026,30,0.026,32,2.825,33,1.923,43,2.541,44,1.923,45,2.541,46,2.541,619,5.113,637,6.125,638,6.125,639,6.125]],["title/overview.html",[640,3.622]],["body/overview.html",[2,1.221,12,0.031,21,2.527,29,0.021,30,0.021,31,1.034,32,3.972,33,1.33,34,1.33,35,1.594,36,1.594,37,1.33,38,1.594,39,1.594,40,2.531,41,2.531,42,2.531,43,3.464,44,2.622,45,3.347,46,3.347,47,2.204,48,1.594,49,1.594,67,1.453,112,2.527,159,1.221,179,2.531,181,2.531,182,2.787,201,2.534,336,2.531,337,2.531,338,2.531,387,2.527,403,2.531,405,2.531,455,1.954,459,2.201,487,2.527,502,2.531,503,2.531,640,2.531,641,3.032,642,3.032,643,3.032,644,3.032]],["title/properties.html",[143,1.542,558,2.224]],["body/properties.html",[12,0.031,29,0.028,30,0.028,143,1.911,460,3.058,629,3.96,636,3.96,645,4.744,646,4.744,647,4.744]],["title/miscellaneous/variables.html",[576,1.717,648,3.196]],["body/miscellaneous/variables.html",[7,0.594,12,0.032,29,0.024,30,0.024,91,1.01,142,3.219,221,3.172,227,3.219,269,3.172,301,3.172,302,3.172,324,3.219,454,2.828,457,2.799,458,3.572,459,3.935,460,3.172,461,4.525,550,3.219,576,2.485,648,3.219,649,3.856,650,3.856,651,4.921,652,4.921,653,3.856,654,3.856]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":646,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":459,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":461,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["3600",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":642,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":641,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":643,"title":{},"body":{"overview.html":{}}}],["7.1.16",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":644,"title":{},"body":{"overview.html":{}}}],["accesstoken",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":282,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["already",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":620,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@apiconsumes('multipart/form",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@get('profile",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":331,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":327,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":329,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":359,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isemail",{"_index":357,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(6)@maxlength(20",{"_index":361,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apitags",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{}}}],["apitags('auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('school",{"_index":392,"title":{},"body":{"controllers/SchoolController.html":{}}}],["app",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":589,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["atau",{"_index":439,"title":{},"body":{"injectables/SchoolService.html":{}}}],["auth",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":74,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":116,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":174,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":162,"title":{},"body":{"classes/AuthGuard.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":629,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":112,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatar(@req",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["awikwok",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backers",{"_index":621,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berarti",{"_index":441,"title":{},"body":{"injectables/SchoolService.html":{}}}],["berhasil",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":639,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":637,"title":{},"body":{"modules.html":{}}}],["building",{"_index":584,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":163,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":165,"title":{},"body":{"classes/AuthGuard.html":{}}}],["catch",{"_index":446,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["cb",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.email",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.id",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.name",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.password",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":24,"title":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":159,"title":{},"body":{"classes/AuthGuard.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":336,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":337,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":338,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":403,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":404,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":405,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":502,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":504,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":503,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":168,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('school",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":541,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":367,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":394,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":372,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(schooldata",{"_index":410,"title":{},"body":{"injectables/SchoolService.html":{}}}],["create(schooldata:createschooldto",{"_index":418,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createdata",{"_index":523,"title":{},"body":{"injectables/TaskService.html":{}}}],["createschool",{"_index":419,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":279,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":509,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":297,"title":{"classes/CreateTaskDTO.html":{}},"body":{"classes/CreateTaskDTO.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data')@apibody({schema",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.email",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":521,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["data:createschool",{"_index":421,"title":{},"body":{"injectables/SchoolService.html":{}}}],["data:dataschool",{"_index":424,"title":{},"body":{"injectables/SchoolService.html":{}}}],["data:school",{"_index":428,"title":{},"body":{"injectables/SchoolService.html":{}}}],["data:updateschool",{"_index":432,"title":{},"body":{"injectables/SchoolService.html":{}}}],["data:updateschooldto",{"_index":431,"title":{},"body":{"injectables/SchoolService.html":{}}}],["dataschool",{"_index":422,"title":{},"body":{"injectables/SchoolService.html":{}}}],["datatask",{"_index":525,"title":{},"body":{"injectables/TaskService.html":{}}}],["datauser",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDTO.html":{}}}],["default",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{}}}],["delete",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["delete('/:task_id",{"_index":499,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":379,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleted",{"_index":533,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleteschool",{"_index":434,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deletetaskbyid",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":500,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":511,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetaskbyid(taskid",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":460,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":598,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["ditemukan",{"_index":443,"title":{},"body":{"injectables/SchoolService.html":{}}}],["documentation",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":609,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":585,"title":{},"body":{"index.html":{}}}],["email",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":172,"title":{},"body":{"classes/AuthGuard.html":{}}}],["error",{"_index":447,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["error('failed",{"_index":453,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["error.code",{"_index":450,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["example",{"_index":595,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":166,"title":{},"body":{"classes/AuthGuard.html":{}}}],["exists",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":161,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{}}}],["file.filename",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":368,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":369,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param('id",{"_index":397,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":375,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["format:'binary",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["found\",httpstatus.not_found",{"_index":427,"title":{},"body":{"injectables/SchoolService.html":{}}}],["framework",{"_index":583,"title":{},"body":{"index.html":{}}}],["function",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":577,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":493,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":376,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('hellos",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get('profile",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["getalltasks",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethellos",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettaskbyid",{"_index":467,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":494,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":514,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettaskbyid(taskid",{"_index":478,"title":{},"body":{"controllers/TaskController.html":{}}}],["getting",{"_index":579,"title":{"index.html":{}},"body":{}}],["global",{"_index":340,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grow",{"_index":616,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":164,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":169,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["hellos",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":626,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpexception(\"not",{"_index":426,"title":{},"body":{"injectables/SchoolService.html":{}}}],["httpexception('data",{"_index":444,"title":{},"body":{"injectables/SchoolService.html":{}}}],["httpexception(`bad",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(`user",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":633,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_request",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.created",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.found",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.ok",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["httpstatus.unauthorized",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":300,"title":{},"body":{"classes/CreateTaskDTO.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{}}}],["identifier",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":527,"title":{},"body":{"injectables/TaskService.html":{}}}],["incorrect",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["inject",{"_index":518,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":520,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":594,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":597,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":448,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["interface",{"_index":455,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":456,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":292,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":293,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":304,"title":{},"body":{"classes/CreateTaskDTO.html":{}}}],["isoptional",{"_index":294,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["isoptional()@isstring",{"_index":540,"title":{},"body":{"classes/UpdateTaskDTO.html":{}}}],["isstring",{"_index":295,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDTO.html":{}}}],["isstring()@isnotempty",{"_index":290,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":285,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":287,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["jika",{"_index":436,"title":{},"body":{"injectables/SchoolService.html":{}}}],["join",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":182,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":630,"title":{},"body":{"index.html":{}}}],["legend",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":636,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":613,"title":{},"body":{"index.html":{}}}],["login",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":96,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":332,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":335,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["mengembalikan",{"_index":437,"title":{},"body":{"injectables/SchoolService.html":{}}}],["message",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":333,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":334,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":576,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":612,"title":{},"body":{"index.html":{}}}],["mode",{"_index":602,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":625,"title":{},"body":{"index.html":{}}}],["multer",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":631,"title":{},"body":{"index.html":{}}}],["name",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":590,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":635,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":519,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":537,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":175,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"dependencies.html":{}}}],["new",{"_index":178,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["newuser",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":582,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":417,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["notfoundexception(`task",{"_index":452,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["null",{"_index":438,"title":{},"body":{"injectables/SchoolService.html":{}}}],["number",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDTO.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{}}}],["object",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":614,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":640,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2025",{"_index":451,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["package",{"_index":558,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":536,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":535,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":496,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":383,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":283,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":623,"title":{},"body":{"index.html":{}}}],["post",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":449,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":341,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":44,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":201,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["process.on('beforeexit",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":604,"title":{},"body":{"index.html":{}}}],["profile",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":581,"title":{},"body":{"index.html":{}}}],["project",{"_index":615,"title":{},"body":{"index.html":{}}}],["properties",{"_index":143,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDTO.html":{},"properties.html":{}}}],["property",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":624,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":104,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["remove",{"_index":370,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":401,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":378,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":593,"title":{},"body":{"index.html":{}}}],["req",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["req.user.id",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":599,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":586,"title":{},"body":{"index.html":{}}}],["schema",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["school",{"_index":363,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["school.controller",{"_index":407,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":281,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:11",{"_index":288,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:15",{"_index":286,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:19",{"_index":289,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:6",{"_index":291,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":284,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":365,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schooldata",{"_index":412,"title":{},"body":{"injectables/SchoolService.html":{}}}],["schoolmodule",{"_index":45,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolservice",{"_index":387,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sekolah",{"_index":445,"title":{},"body":{"injectables/SchoolService.html":{}}}],["select",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["server",{"_index":587,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":588,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDTO.html":{},"index.html":{}}}],["sponsors",{"_index":618,"title":{},"body":{"index.html":{}}}],["src/.../config_jwt.ts",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.ts",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:8",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:8",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:66",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":485,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":160,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:12",{"_index":171,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:9",{"_index":167,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:107",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:51",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:84",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":326,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:14",{"_index":328,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:21",{"_index":330,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":356,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:14",{"_index":360,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:20",{"_index":358,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:27",{"_index":362,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:15",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt.ts",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":553,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":339,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:9",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":280,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":534,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":364,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":366,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:13",{"_index":373,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:18",{"_index":374,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:23",{"_index":377,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:28",{"_index":384,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:33",{"_index":380,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":406,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":408,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:11",{"_index":411,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:21",{"_index":413,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:30",{"_index":414,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:44",{"_index":416,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:55",{"_index":415,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:8",{"_index":409,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/tasks.ts",{"_index":457,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":298,"title":{},"body":{"classes/CreateTaskDTO.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":539,"title":{},"body":{"classes/UpdateTaskDTO.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:22",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:28",{"_index":477,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:34",{"_index":480,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:40",{"_index":484,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:46",{"_index":474,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":505,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":507,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:14",{"_index":508,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:19",{"_index":510,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:29",{"_index":513,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:50",{"_index":515,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:62",{"_index":517,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:84",{"_index":512,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":600,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":603,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":605,"title":{},"body":{"index.html":{}}}],["started",{"_index":580,"title":{"index.html":{}},"body":{}}],["starter",{"_index":592,"title":{},"body":{"index.html":{}}}],["statements",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":627,"title":{},"body":{"index.html":{}}}],["storage",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDTO.html":{}}}],["sub",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["super",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":176,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":619,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":638,"title":{},"body":{"modules.html":{}}}],["table",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":454,"title":{"interfaces/Task.html":{}},"body":{"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":506,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":486,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":299,"title":{},"body":{"classes/CreateTaskDTO.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{}}}],["task.dto.ts:10",{"_index":305,"title":{},"body":{"classes/CreateTaskDTO.html":{},"classes/UpdateTaskDTO.html":{}}}],["task.dto.ts:12",{"_index":303,"title":{},"body":{"classes/CreateTaskDTO.html":{},"classes/UpdateTaskDTO.html":{}}}],["task.dto.ts:6",{"_index":306,"title":{},"body":{"classes/CreateTaskDTO.html":{},"classes/UpdateTaskDTO.html":{}}}],["task.service",{"_index":488,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":301,"title":{},"body":{"classes/CreateTaskDTO.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDTO.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":458,"title":{},"body":{"interfaces/Task.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":302,"title":{},"body":{"classes/CreateTaskDTO.html":{},"interfaces/Task.html":{},"classes/UpdateTaskDTO.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":462,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskid",{"_index":475,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":46,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":487,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":608,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":611,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":610,"title":{},"body":{"index.html":{}}}],["tests",{"_index":607,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":617,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.schools.create",{"_index":420,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":435,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":425,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":423,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":430,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":524,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":532,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":529,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":526,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":531,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":522,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":398,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":402,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":400,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+taskid",{"_index":501,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltasks",{"_index":492,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+taskid",{"_index":495,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+taskid",{"_index":498,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":177,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["tidak",{"_index":442,"title":{},"body":{"injectables/SchoolService.html":{}}}],["touch",{"_index":628,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["try",{"_index":433,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":634,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":538,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":591,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":173,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined",{"_index":440,"title":{},"body":{"injectables/SchoolService.html":{}}}],["undefined})@useguards(authguard)@useinterceptors(undefined)@post('avatar",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":606,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":647,"title":{},"body":{"properties.html":{}}}],["update",{"_index":371,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["update(@param('id",{"_index":399,"title":{},"body":{"controllers/SchoolController.html":{}}}],["update(id",{"_index":381,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedtask",{"_index":530,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateschool",{"_index":429,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":382,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetaskbyid",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(@param('task_id",{"_index":497,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskbyid(task_id",{"_index":516,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatetaskbyid(taskid",{"_index":481,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskdto",{"_index":482,"title":{"classes/UpdateTaskDTO.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDTO.html":{},"coverage.html":{}}}],["upload",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/image",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":476,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@patch('/:task_id",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":170,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":528,"title":{},"body":{"injectables/TaskService.html":{}}}],["validate",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":296,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDTO.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDTO.html":{},"dependencies.html":{}}}],["value",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":648,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":645,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":601,"title":{},"body":{"index.html":{}}}],["website",{"_index":632,"title":{},"body":{"index.html":{}}}],["world!ssss",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":596,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":622,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getHellos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHellos\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHellos()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hellos')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n  @Get('hellos')\n  getHellos(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ServeStaticModule } from '@nestjs/serve-static';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    TaskModule,\n    PrismaModule,\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getHellos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHellos\n                        \n                    \n                \n            \n            \n                \ngetHellos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!ssss';\n  }\n  getHellos(): string {\n    return 'Hellos';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseGuards(AuthGuard)@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        \nimport {\n  Body,\n  Controller,\n  Post,\n  Get,\n  UseGuards,\n  Req,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterDto) {\n    return await this.authService.register(data);\n  }\n  @Post('login')\n  async login(@Body() data: LoginDto) {\n    return await this.authService.login(data);\n  }\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async profile(@Req() req) {\n    return await this.authService.profile(req.user.id);\n  }\n\n  @ApiBearerAuth('accessToken')\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        avatar: {\n          type: 'string',\n          format:'binary'\n        }\n      }\n    }\n   \n    })\n  @UseGuards(AuthGuard)\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Post('avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.authService.uploadAvatar(\n      req.user.id,\n      '/uploads/image/' + file.filename,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CanActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CanActivate\n                        \n                    \n                \n            \n            \n                \nCanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  UnauthorizedException,\n  ExecutionContext,\n  Injectable,\n} from '@nestjs/common';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  CanActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  // Register newUser\n  // @param data\n  // @returns\n\n  generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n  async register(data: RegisterDto) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (checkUserExists) {\n      throw new HttpException(\n        `User ${data.email} already exists`,\n        HttpStatus.FOUND,\n      );\n    }\n    data.password = await hash(data.password, 12);\n\n    const createUser = await this.prisma.users.create({\n      data: data,\n    });\n    if (createUser) {\n      return {\n        statusCode: HttpStatus.CREATED,\n        message: 'Register Successfully',\n      };\n    }\n  }\n\n  async login(data: LoginDto) {\n    const checkUser = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n    if (!checkUser) {\n      throw new HttpException(\n        `User ${data.email} not found`,\n        HttpStatus.NOT_FOUND,\n      );\n    }\n    const checkPassword = await compare(data.password, checkUser.password);\n\n    if (checkPassword) {\n      const accessToken = this.generateJWT({\n        sub: checkUser.id,\n        name: checkUser.name,\n        email: checkUser.email,\n      });\n      return {\n        statusCode: 200,\n        accessToken,\n        message: 'Login Berhasil',\n      };\n    } else {\n      throw new HttpException(\n        'User or Password incorrect',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n  }\n\n  async profile(user_id: number) {\n    const dataUser = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        avatar: true,\n        tasks: true,\n      },\n    });\n    if (dataUser) {\n      return {\n        statusCode: HttpStatus.OK,\n        data: dataUser,\n      };\n    }\n\n    throw new HttpException(`User Not Found`, HttpStatus.NOT_FOUND);\n  }\n\n  async uploadAvatar(user_id: number, avatar) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        id: user_id,\n      },\n    });\n    if (checkUserExists) {\n      const updateAvatar = await this.prisma.users.update({\n        data: {\n          avatar: avatar,\n        },\n        where: {\n          id: user_id,\n        },\n      });\n      if (updateAvatar) {\n        return {\n          statusCode: 200,\n          message: 'Upload Avatar Success',\n        };\n      }\n    }\n    throw new HttpException(`Bad Request`, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateSchoolDto {\n    @IsString()\n    @IsNotEmpty()\n    school_name: string\n    \n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string\n\n    @IsString()\n    @IsOptional()\n    address?: string\n    \n    @IsString()\n    @IsOptional()\n    phone?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDTO.html":{"url":"classes/CreateTaskDTO.html","title":"class - CreateTaskDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateTaskDTO {\n  @IsNotEmpty()\n  @IsString()\n  task_name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  task_description: string;\n\n  id_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      email: payload.email,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class LoginDto {\n   @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n   @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, INestApplication, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n  async enableShutdownHooks(app: INestApplication) {\n    process.on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('School')\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateSchoolDto: UpdateSchoolDto) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports :[PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(schoolData: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schoolData\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService) { }\n  \n  async create(schoolData:CreateSchoolDto) {\n    const createSchool = await this.prisma.schools.create({\n      data: schoolData\n    });\n    return {\n      statusCode: HttpStatus.CREATED,\n      data:createSchool\n    }\n  }\n\n  async findAll() {\n    const dataSchool = await this.prisma.schools.findMany()\n\n    return {\n      statusCode: HttpStatus.OK,\n      data:dataSchool\n    }\n  }\n\n  async findOne(id: number) {\n    const school = await this.prisma.schools.findFirst({\n      where: {id}\n    });\n\n    if (!school) { \n      throw new HttpException(\"Not Found\",HttpStatus.NOT_FOUND)\n    }\n    return {\n      statusCode: HttpStatus.OK,\n      data:school\n    }\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    const updateSchool = await this.prisma.schools.update({\n      where: { id },\n      data:updateSchoolDto\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      data:updateSchool\n    }\n  }\n\n  async remove(id: number) {\n    try {\n      const deleteSchool = await this.prisma.schools.delete({\n        where: { id },\n      });\n\n      if (!deleteSchool) {\n        // Jika Prisma mengembalikan null atau undefined, berarti data tidak ditemukan\n        throw new HttpException('Data sekolah tidak ditemukan', HttpStatus.NOT_FOUND);\n      }\n      return {\n        statusCode: HttpStatus.OK,\n        data: deleteSchool,\n      };\n    } catch (error) {\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\n        if (error.code === 'P2025') {\n          throw new NotFoundException(`Task with ID ${id} not found`);\n        }\n      }\n      throw new Error('Failed to update task.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/tasks.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  task_id: number;\n  task_name: string;\n  task_description: string;\n}\n\nexport const tasks: Task[] = [\n  {\n    task_id: 1,\n    task_name: 'Task 1',\n    task_description: 'Task 1 description',\n  },\n  {\n    task_id: 2,\n    task_name: 'Task 2',\n    task_description: 'Task 2 description',\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTasks\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(taskId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTasks()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(taskId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(taskId, body: UpdateTaskDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateTaskDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthGuard } from 'src/auth/auth.guard';\nimport { CreateTaskDTO } from './dto/create-task.dto';\nimport { UpdateTaskDTO } from './dto/update-task.dto';\nimport { TaskService } from './task.service';\nimport {\n  Body,\n  Controller,\n  Post,\n  Get,\n  Param,\n  Patch,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\n\n@Controller('task')\nexport class TaskController {\n  constructor(private taskService: TaskService) {}\n\n  @UseGuards(AuthGuard)\n  @Post()\n  async createTask(@Body() body: CreateTaskDTO) {\n    return await this.taskService.createTask(body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get()\n  async getAllTasks() {\n    return await this.taskService.getAllTasks();\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('/:task_id')\n  async getTaskById(@Param('task_id') taskId) {\n    return this.taskService.getTaskById(+taskId);\n  }\n\n  @UseGuards(AuthGuard)\n  @Patch('/:task_id')\n  async updateTaskById(@Param('task_id') taskId, @Body() body: UpdateTaskDTO) {\n    return await this.taskService.updateTaskById(+taskId, body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete('/:task_id')\n  async deleteTaskById(@Param('task_id') taskId) {\n    return await this.taskService.deleteTaskById(+taskId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTasks\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(data: CreateTaskDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTaskDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(task_id: number, data: UpdateTaskDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  Inject,\n  HttpStatus,\n} from '@nestjs/common';\nimport { CreateTaskDTO } from './dto/create-task.dto';\nimport { UpdateTaskDTO } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Prisma } from '@prisma/client';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(REQUEST) private req: any,\n  ) {}\n  async createTask(data: CreateTaskDTO) {\n    data.id_user = this.req.user.id;\n    const createData = await this.prisma.tasks.create({\n      data: data,\n    });\n    return {\n      statusCode: HttpStatus.CREATED,\n      data: createData,\n    };\n  }\n  async getAllTasks() {\n    const dataTask = await this.prisma.tasks.findMany({\n      where: {\n        id_user: this.req.user.id,\n      },\n      include: {\n        users: {\n          select: {\n            id: true,\n            name: true,\n            avatar: true,\n            email: true,\n          },\n        },\n      },\n    });\n    return {\n      statusCode: 200,\n      data: dataTask,\n    };\n  }\n  async getTaskById(task_id: number) {\n    const task = await this.prisma.tasks.findFirst({\n      where: {\n        id: task_id,\n        id_user: this.req.user.id,\n      },\n    });\n    if (!task) {\n      throw new NotFoundException(`Task with ID ${task_id} not found`);\n    }\n    return task;\n  }\n  async updateTaskById(task_id: number, data: UpdateTaskDTO) {\n    try {\n      data.id_user = this.req.user.id;\n      const updatedTask = await this.prisma.tasks.update({\n        data: data,\n        where: {\n          id: task_id,\n        },\n      });\n      return {\n        statusCode: 200,\n        data: updatedTask,\n      };\n    } catch (error) {\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\n        if (error.code === 'P2025') {\n          throw new NotFoundException(`Task with ID ${task_id} not found`);\n        }\n      }\n      throw new Error('Failed to update task.');\n    }\n  }\n  async deleteTaskById(task_id: number) {\n    try {\n      const deleteTaskById = await this.prisma.tasks.delete({\n        where: {\n          id: task_id,\n          id_user: this.req.user.id,\n        },\n      });\n      return {\n        statusCode: 200,\n        data: deleteTaskById,\n        message: 'Task deleted successfully',\n      };\n    } catch (error) {\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\n        if (error.code === 'P2025') {\n          throw new NotFoundException(`Task with ID ${task_id} not found`);\n        }\n      }\n      throw new Error('Failed to update task.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDTO.html":{"url":"classes/UpdateTaskDTO.html","title":"class - UpdateTaskDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateTaskDTO {\n  @IsOptional()\n  @IsString()\n  task_name: string;\n\n  @IsOptional()\n  @IsString()\n  task_description: string;\n\n  id_user: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config_jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @nestjs/swagger : ^7.1.16\n        \n            @prisma/client : ^5.6.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../config_jwt.ts)\n                        \n                        \n                            tasks   (src/.../tasks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config_jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'awikwok',\n  expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/tasks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    task_id: 1,\n    task_name: 'Task 1',\n    task_description: 'Task 1 description',\n  },\n  {\n    task_id: 2,\n    task_name: 'Task 2',\n    task_description: 'Task 2 description',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
